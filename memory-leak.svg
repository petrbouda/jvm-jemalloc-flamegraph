<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="846" onload="init(evt)" viewBox="0 0 1200 846" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Method " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="846.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >jemalloc</text>
<text id="subtitle" x="600.00" y="48" >memory leaks</text>
<text id="details" x="10.00" y="829" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="829" > </text>
<g id="frames">
<g >
<title>je_malloc_default&lt;0000000000026860&gt; (46,837,760 bytes, 1.74%)</title><rect x="38.0" y="301" width="20.6" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="41.05" y="311.5" ></text>
</g>
<g >
<title>JNI_CreateJavaVM&lt;00000000008f9b40&gt; (1,931,224 bytes, 0.07%)</title><rect x="10.0" y="717" width="0.8" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="13.00" y="727.5" ></text>
</g>
<g >
<title>Interpreter (385,104 bytes, 0.01%)</title><rect x="11.6" y="125" width="0.2" height="15.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text  x="14.60" y="135.5" ></text>
</g>
<g >
<title>Interpreter (954,376 bytes, 0.04%)</title><rect x="11.4" y="333" width="0.4" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="14.38" y="343.5" ></text>
</g>
<g >
<title>Interpreter (239,984 bytes, 0.01%)</title><rect x="10.8" y="637" width="0.2" height="15.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text  x="13.85" y="647.5" ></text>
</g>
<g >
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*)&lt;0000000000a49050&gt; (2,115,920 bytes, 0.08%)</title><rect x="1189.0" y="669" width="0.9" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1191.99" y="679.5" ></text>
</g>
<g >
<title>CompileBroker::invoke_compiler_on_method(CompileTask*)&lt;00000000005fb760&gt; (442,560 bytes, 0.02%)</title><rect x="1188.8" y="685" width="0.1" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1191.75" y="695.5" ></text>
</g>
<g >
<title>jvmti_GenerateEvents&lt;00000000009e2ab0&gt; (2,113,648 bytes, 0.08%)</title><rect x="1189.0" y="637" width="0.9" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="1191.99" y="647.5" ></text>
</g>
<g >
<title>AllocateHeap(unsigned long, MEMFLAGS, AllocFailStrategy::AllocFailEnum)&lt;00000000003c6700&gt; (262,496 bytes, 0.01%)</title><rect x="10.3" y="621" width="0.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="13.26" y="631.5" ></text>
</g>
<g >
<title>CompileBroker::compiler_thread_loop()&lt;00000000005fcf10&gt; (602,112 bytes, 0.02%)</title><rect x="1188.7" y="701" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1191.73" y="711.5" ></text>
</g>
<g >
<title>Interpreter (2,686,168,712 bytes, 99.80%)</title><rect x="11.0" y="573" width="1177.7" height="15.0" fill="rgb(254,154,0)" rx="2" ry="2" />
<text  x="14.03" y="583.5" >Interpreter</text>
</g>
<g >
<title>Interpreter (3,517,472 bytes, 0.13%)</title><rect x="11.8" y="381" width="1.6" height="15.0" fill="rgb(229,129,0)" rx="2" ry="2" />
<text  x="14.82" y="391.5" ></text>
</g>
<g >
<title>Interpreter (801,920 bytes, 0.03%)</title><rect x="11.4" y="269" width="0.4" height="15.0" fill="rgb(204,104,0)" rx="2" ry="2" />
<text  x="14.44" y="279.5" ></text>
</g>
<g >
<title>Interpreter (722,656 bytes, 0.03%)</title><rect x="11.5" y="237" width="0.3" height="15.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text  x="14.48" y="247.5" ></text>
</g>
<g >
<title>je_prof_tctx_create&lt;000000000009d920&gt; (56,304,640 bytes, 2.09%)</title><rect x="13.4" y="237" width="24.6" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="16.36" y="247.5" >j..</text>
</g>
<g >
<title>Threads::create_vm(JavaVMInitArgs*, bool*)&lt;0000000000eeebe0&gt; (1,931,224 bytes, 0.07%)</title><rect x="10.0" y="701" width="0.8" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="13.00" y="711.5" ></text>
</g>
<g >
<title>prof_backtrace_impl[inline] (46,837,760 bytes, 1.74%)</title><rect x="38.0" y="205" width="20.6" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="41.05" y="215.5" ></text>
</g>
<g >
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)&lt;00000000003e00b0&gt; (393,216 bytes, 0.01%)</title><rect x="1189.7" y="493" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1192.75" y="503.5" ></text>
</g>
<g >
<title>Interpreter (797,168 bytes, 0.03%)</title><rect x="11.4" y="253" width="0.4" height="15.0" fill="rgb(254,154,0)" rx="2" ry="2" />
<text  x="14.45" y="263.5" ></text>
</g>
<g >
<title>universe_init()&lt;0000000000f1b480&gt; (1,249,448 bytes, 0.05%)</title><rect x="10.2" y="669" width="0.6" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="13.24" y="679.5" ></text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe:::allocateMemory0 (46,837,760 bytes, 1.74%)</title><rect x="38.0" y="333" width="20.6" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="41.05" y="343.5" ></text>
</g>
<g >
<title>Interpreter (2,686,307,896 bytes, 99.81%)</title><rect x="11.0" y="605" width="1177.7" height="15.0" fill="rgb(220,120,0)" rx="2" ry="2" />
<text  x="13.97" y="615.5" >Interpreter</text>
</g>
<g >
<title>LGenerateUnsafeLeak:::allocate2(GenerateUnsafeLeak.java:48) (103,142,400 bytes, 3.83%)</title><rect x="13.4" y="429" width="45.2" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="16.36" y="439.5" >LGen..</text>
</g>
<g >
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)&lt;00000000003df990&gt; (393,216 bytes, 0.01%)</title><rect x="1189.7" y="509" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1192.75" y="519.5" ></text>
</g>
<g >
<title>imalloc[inline] (262,496 bytes, 0.01%)</title><rect x="10.3" y="589" width="0.1" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="13.26" y="599.5" ></text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe:::allocateMemory0 (96,117,760 bytes, 3.57%)</title><rect x="1146.6" y="333" width="42.1" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1149.58" y="343.5" >Ljd..</text>
</g>
<g >
<title>imalloc_body[inline] (524,640 bytes, 0.02%)</title><rect x="10.6" y="589" width="0.2" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="13.56" y="599.5" ></text>
</g>
<g >
<title>je_prof_backtrace&lt;00000000000ab910&gt; (786,432 bytes, 0.03%)</title><rect x="1189.4" y="413" width="0.3" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="1192.40" y="423.5" ></text>
</g>
<g >
<title>imalloc[inline] (96,117,760 bytes, 3.57%)</title><rect x="1146.6" y="285" width="42.1" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="1149.58" y="295.5" >ima..</text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe:::allocateMemory(Unsafe.java:622) (56,304,640 bytes, 2.09%)</title><rect x="13.4" y="349" width="24.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="16.36" y="359.5" >L..</text>
</g>
<g >
<title>imalloc[inline] (814,080 bytes, 0.03%)</title><rect x="13.0" y="285" width="0.4" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="16.01" y="295.5" ></text>
</g>
<g >
<title>Interpreter (1,576,536 bytes, 0.06%)</title><rect x="11.1" y="461" width="0.7" height="15.0" fill="rgb(254,154,0)" rx="2" ry="2" />
<text  x="14.13" y="471.5" ></text>
</g>
<g >
<title>create_inline_record(nmethod*)&lt;0000000000a48cc0&gt; (1,700,528 bytes, 0.06%)</title><rect x="1189.2" y="557" width="0.7" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="1192.17" y="567.5" ></text>
</g>
<g >
<title>Lsun/misc/Unsafe:::allocateMemory(Unsafe.java:462) (103,142,400 bytes, 3.83%)</title><rect x="13.4" y="365" width="45.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="16.36" y="375.5" >Lsun..</text>
</g>
<g >
<title>Interpreter (2,686,344,608 bytes, 99.81%)</title><rect x="11.0" y="653" width="1177.7" height="15.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="13.95" y="663.5" >Interpreter</text>
</g>
<g >
<title>init_globals()&lt;0000000000838660&gt; (1,393,656 bytes, 0.05%)</title><rect x="10.2" y="685" width="0.6" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="13.20" y="695.5" ></text>
</g>
<g >
<title>Interpreter (3,518,144 bytes, 0.13%)</title><rect x="11.8" y="413" width="1.6" height="15.0" fill="rgb(204,104,0)" rx="2" ry="2" />
<text  x="14.82" y="423.5" ></text>
</g>
<g >
<title>ScopeDesc::sender() const&lt;0000000000d188f0&gt; (327,680 bytes, 0.01%)</title><rect x="1189.0" y="541" width="0.1" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="1191.99" y="551.5" ></text>
</g>
<g >
<title>Interpreter (662,096 bytes, 0.02%)</title><rect x="11.5" y="221" width="0.3" height="15.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="14.49" y="231.5" ></text>
</g>
<g >
<title>je_prof_backtrace&lt;00000000000ab910&gt; (2,611,200 bytes, 0.10%)</title><rect x="11.8" y="221" width="1.2" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="14.82" y="231.5" ></text>
</g>
<g >
<title>je_malloc_default&lt;0000000000026860&gt; (2,481,576,960 bytes, 92.20%)</title><rect x="58.6" y="301" width="1088.0" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="61.59" y="311.5" >je_malloc_default&lt;0000000000026860&gt;</text>
</g>
<g >
<title>Interpreter (555,008 bytes, 0.02%)</title><rect x="11.5" y="205" width="0.3" height="15.0" fill="rgb(224,124,0)" rx="2" ry="2" />
<text  x="14.53" y="215.5" ></text>
</g>
<g >
<title>Interpreter (265,008 bytes, 0.01%)</title><rect x="10.0" y="637" width="0.2" height="15.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text  x="13.05" y="647.5" ></text>
</g>
<g >
<title>all (2,691,421,112 bytes, 100%)</title><rect x="10.0" y="797" width="1180.0" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="13.00" y="807.5" ></text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe:::allocateMemory0 (814,080 bytes, 0.03%)</title><rect x="13.0" y="333" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="16.01" y="343.5" ></text>
</g>
<g >
<title>Interpreter (3,517,472 bytes, 0.13%)</title><rect x="11.8" y="365" width="1.6" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="14.82" y="375.5" ></text>
</g>
<g >
<title>je_malloc_default&lt;0000000000026860&gt; (2,611,200 bytes, 0.10%)</title><rect x="11.8" y="301" width="1.2" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="14.82" y="311.5" ></text>
</g>
<g >
<title>ScopeDesc::sender() const&lt;0000000000d188f0&gt; (1,179,648 bytes, 0.04%)</title><rect x="1189.4" y="541" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1192.40" y="551.5" ></text>
</g>
<g >
<title>imalloc_body[inline] (262,496 bytes, 0.01%)</title><rect x="10.3" y="573" width="0.1" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="13.26" y="583.5" ></text>
</g>
<g >
<title>Interpreter (901,944 bytes, 0.03%)</title><rect x="11.4" y="285" width="0.4" height="15.0" fill="rgb(220,120,0)" rx="2" ry="2" />
<text  x="14.40" y="295.5" ></text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe:::allocateMemory(Unsafe.java:622) (46,837,760 bytes, 1.74%)</title><rect x="38.0" y="349" width="20.6" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="41.05" y="359.5" ></text>
</g>
<g >
<title>JavaMain&lt;0000000000004790&gt; (2,688,518,088 bytes, 99.89%)</title><rect x="10.0" y="733" width="1178.7" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="13.00" y="743.5" >JavaMain&lt;0000000000004790&gt;</text>
</g>
<g >
<title>Interpreter (2,611,232 bytes, 0.10%)</title><rect x="11.8" y="333" width="1.2" height="15.0" fill="rgb(250,150,0)" rx="2" ry="2" />
<text  x="14.82" y="343.5" ></text>
</g>
<g >
<title>prof_backtrace_impl[inline] (262,496 bytes, 0.01%)</title><rect x="10.3" y="509" width="0.1" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="13.26" y="519.5" ></text>
</g>
<g >
<title>LGenerateUnsafeLeak:::allocate5(GenerateUnsafeLeak.java:60) (2,577,694,720 bytes, 95.77%)</title><rect x="58.6" y="381" width="1130.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="61.59" y="391.5" >LGenerateUnsafeLeak:::allocate5(GenerateUnsafeLeak.java:60)</text>
</g>
<g >
<title>imalloc_body[inline] (46,837,760 bytes, 1.74%)</title><rect x="38.0" y="269" width="20.6" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="41.05" y="279.5" ></text>
</g>
<g >
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*) (310,768 bytes, 0.01%)</title><rect x="1188.8" y="653" width="0.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1191.81" y="663.5" ></text>
</g>
<g >
<title>Interpreter (2,686,344,512 bytes, 99.81%)</title><rect x="11.0" y="637" width="1177.7" height="15.0" fill="rgb(215,115,0)" rx="2" ry="2" />
<text  x="13.95" y="647.5" >Interpreter</text>
</g>
<g >
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, jvmtiAddrLocationMap**, int*)&lt;00000000009e1560&gt; (327,680 bytes, 0.01%)</title><rect x="1189.0" y="557" width="0.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1191.99" y="567.5" ></text>
</g>
<g >
<title>imalloc_body[inline] (96,117,760 bytes, 3.57%)</title><rect x="1146.6" y="269" width="42.1" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="1149.58" y="279.5" >ima..</text>
</g>
<g >
<title>je_prof_tctx_create&lt;000000000009d920&gt; (2,481,576,960 bytes, 92.20%)</title><rect x="58.6" y="237" width="1088.0" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="61.59" y="247.5" >je_prof_tctx_create&lt;000000000009d920&gt;</text>
</g>
<g >
<title>AllocateHeap(unsigned long, MEMFLAGS, AllocFailStrategy::AllocFailEnum)&lt;00000000003c6700&gt; (524,640 bytes, 0.02%)</title><rect x="10.6" y="637" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="13.56" y="647.5" ></text>
</g>
<g >
<title>imalloc[inline] (46,837,760 bytes, 1.74%)</title><rect x="38.0" y="285" width="20.6" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="41.05" y="295.5" ></text>
</g>
<g >
<title>imalloc[inline] (524,640 bytes, 0.02%)</title><rect x="10.6" y="605" width="0.2" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="13.56" y="615.5" ></text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe:::allocateMemory0 (2,481,576,960 bytes, 92.20%)</title><rect x="58.6" y="333" width="1088.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="61.59" y="343.5" >Ljdk/internal/misc/Unsafe:::allocateMemory0</text>
</g>
<g >
<title>je_malloc_default&lt;0000000000026860&gt; (524,640 bytes, 0.02%)</title><rect x="10.6" y="621" width="0.2" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="13.56" y="631.5" ></text>
</g>
<g >
<title>je_prof_backtrace&lt;00000000000ab910&gt; (96,117,760 bytes, 3.57%)</title><rect x="1146.6" y="221" width="42.1" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="1149.58" y="231.5" >je_..</text>
</g>
<g >
<title>JvmtiExport::post_compiled_method_load(JvmtiEnv*, nmethod*)&lt;0000000000a4f320&gt; (2,113,376 bytes, 0.08%)</title><rect x="1189.0" y="573" width="0.9" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1191.99" y="583.5" ></text>
</g>
<g >
<title>prof_alloc_prep[inline] (814,080 bytes, 0.03%)</title><rect x="13.0" y="253" width="0.4" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="16.01" y="263.5" ></text>
</g>
<g >
<title>LGenerateUnsafeLeak:::allocate3(GenerateUnsafeLeak.java:52) (103,142,400 bytes, 3.83%)</title><rect x="13.4" y="413" width="45.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="16.36" y="423.5" >LGen..</text>
</g>
<g >
<title>Unsafe_AllocateMemory0&lt;0000000000f1e8b0&gt; (56,304,640 bytes, 2.09%)</title><rect x="13.4" y="317" width="24.6" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="16.36" y="327.5" >U..</text>
</g>
<g >
<title>prof_backtrace_impl[inline] (96,117,760 bytes, 3.57%)</title><rect x="1146.6" y="205" width="42.1" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="1149.58" y="215.5" >pro..</text>
</g>
<g >
<title>prof_alloc_prep[inline] (56,304,640 bytes, 2.09%)</title><rect x="13.4" y="253" width="24.6" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="16.36" y="263.5" >p..</text>
</g>
<g >
<title>imalloc_body[inline] (393,216 bytes, 0.01%)</title><rect x="10.4" y="573" width="0.1" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="13.37" y="583.5" ></text>
</g>
<g >
<title>Interpreter (553,280 bytes, 0.02%)</title><rect x="11.5" y="189" width="0.3" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="14.53" y="199.5" ></text>
</g>
<g >
<title>imalloc[inline] (393,216 bytes, 0.01%)</title><rect x="1189.7" y="461" width="0.2" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="1192.75" y="471.5" ></text>
</g>
<g >
<title>LGenerateUnsafeLeak:::allocate1(GenerateUnsafeLeak.java:44) (2,577,694,720 bytes, 95.77%)</title><rect x="58.6" y="445" width="1130.1" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="61.59" y="455.5" >LGenerateUnsafeLeak:::allocate1(GenerateUnsafeLeak.java:44)</text>
</g>
<g >
<title>imalloc[inline] (262,144 bytes, 0.01%)</title><rect x="1189.0" y="477" width="0.1" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="1191.99" y="487.5" ></text>
</g>
<g >
<title>Interpreter (239,952 bytes, 0.01%)</title><rect x="10.8" y="589" width="0.2" height="15.0" fill="rgb(208,108,0)" rx="2" ry="2" />
<text  x="13.85" y="599.5" ></text>
</g>
<g >
<title>SymbolTable::create_table()&lt;0000000000e881e0&gt; (655,760 bytes, 0.02%)</title><rect x="10.3" y="637" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="13.26" y="647.5" ></text>
</g>
<g >
<title>LGenerateUnsafeLeak:::allocate4(GenerateUnsafeLeak.java:56) (2,577,694,720 bytes, 95.77%)</title><rect x="58.6" y="397" width="1130.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="61.59" y="407.5" >LGenerateUnsafeLeak:::allocate4(GenerateUnsafeLeak.java:56)</text>
</g>
<g >
<title>ThreadJavaMain&lt;00000000000084a0&gt; (2,688,518,088 bytes, 99.89%)</title><rect x="10.0" y="749" width="1178.7" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="13.00" y="759.5" >ThreadJavaMain&lt;00000000000084a0&gt;</text>
</g>
<g >
<title>Interpreter (2,686,343,024 bytes, 99.81%)</title><rect x="11.0" y="621" width="1177.7" height="15.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="13.95" y="631.5" >Interpreter</text>
</g>
<g >
<title>je_prof_backtrace&lt;00000000000ab910&gt; (814,080 bytes, 0.03%)</title><rect x="13.0" y="221" width="0.4" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="16.01" y="231.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*)&lt;0000000000865a20&gt; (265,008 bytes, 0.01%)</title><rect x="10.0" y="669" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="13.05" y="679.5" ></text>
</g>
<g >
<title>je_prof_tctx_create&lt;000000000009d920&gt; (262,144 bytes, 0.01%)</title><rect x="1189.0" y="429" width="0.1" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="1191.99" y="439.5" ></text>
</g>
<g >
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)&lt;00000000003e00b0&gt; (262,144 bytes, 0.01%)</title><rect x="1189.0" y="509" width="0.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1191.99" y="519.5" ></text>
</g>
<g >
<title>prof_backtrace_impl[inline] (393,216 bytes, 0.01%)</title><rect x="10.4" y="509" width="0.1" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="13.37" y="519.5" ></text>
</g>
<g >
<title>Interpreter (397,904 bytes, 0.01%)</title><rect x="11.6" y="141" width="0.2" height="15.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="14.60" y="151.5" ></text>
</g>
<g >
<title>LGenerateUnsafeLeak:::allocate4(GenerateUnsafeLeak.java:56) (103,142,400 bytes, 3.83%)</title><rect x="13.4" y="397" width="45.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="16.36" y="407.5" >LGen..</text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*)&lt;0000000000865a20&gt; (2,686,344,608 bytes, 99.81%)</title><rect x="11.0" y="685" width="1177.7" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="13.95" y="695.5" >JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*)&lt;0000000000865a20&gt;</text>
</g>
<g >
<title>StringTable::create_table()&lt;0000000000e2bbf0&gt; (525,184 bytes, 0.02%)</title><rect x="10.6" y="653" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="13.56" y="663.5" ></text>
</g>
<g >
<title>Compilation::compile_method()&lt;0000000000480520&gt; (310,768 bytes, 0.01%)</title><rect x="1188.8" y="637" width="0.1" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="1191.81" y="647.5" ></text>
</g>
<g >
<title>Interpreter (254,936 bytes, 0.01%)</title><rect x="11.6" y="61" width="0.2" height="15.0" fill="rgb(210,110,0)" rx="2" ry="2" />
<text  x="14.65" y="71.5" ></text>
</g>
<g >
<title>call_stub (2,686,344,608 bytes, 99.81%)</title><rect x="11.0" y="669" width="1177.7" height="15.0" fill="rgb(202,102,0)" rx="2" ry="2" />
<text  x="13.95" y="679.5" >call_stub</text>
</g>
<g >
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)&lt;00000000003df990&gt; (262,144 bytes, 0.01%)</title><rect x="1189.0" y="525" width="0.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1191.99" y="535.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*)&lt;0000000000865a20&gt; (2,684,356,320 bytes, 99.74%)</title><rect x="11.8" y="493" width="1176.9" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="14.82" y="503.5" >JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*)&lt;0000000000865a20&gt;</text>
</g>
<g >
<title>LGenerateUnsafeLeak:::allocate2(GenerateUnsafeLeak.java:48) (2,577,694,720 bytes, 95.77%)</title><rect x="58.6" y="429" width="1130.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="61.59" y="439.5" >LGenerateUnsafeLeak:::allocate2(GenerateUnsafeLeak.java:48)</text>
</g>
<g >
<title>imalloc[inline] (2,611,200 bytes, 0.10%)</title><rect x="11.8" y="285" width="1.2" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="14.82" y="295.5" ></text>
</g>
<g >
<title>prof_alloc_prep[inline] (524,640 bytes, 0.02%)</title><rect x="10.6" y="573" width="0.2" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="13.56" y="583.5" ></text>
</g>
<g >
<title>Interpreter (239,984 bytes, 0.01%)</title><rect x="10.8" y="653" width="0.2" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="13.85" y="663.5" ></text>
</g>
<g >
<title>prof_alloc_prep[inline] (96,117,760 bytes, 3.57%)</title><rect x="1146.6" y="253" width="42.1" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="1149.58" y="263.5" >pro..</text>
</g>
<g >
<title>je_malloc_default&lt;0000000000026860&gt; (56,304,640 bytes, 2.09%)</title><rect x="13.4" y="301" width="24.6" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="16.36" y="311.5" >j..</text>
</g>
<g >
<title>je_prof_backtrace&lt;00000000000ab910&gt; (524,640 bytes, 0.02%)</title><rect x="10.6" y="541" width="0.2" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="13.56" y="551.5" ></text>
</g>
<g >
<title>prof_backtrace_impl[inline] (2,611,200 bytes, 0.10%)</title><rect x="11.8" y="205" width="1.2" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="14.82" y="215.5" ></text>
</g>
<g >
<title>prof_backtrace_impl[inline] (524,640 bytes, 0.02%)</title><rect x="10.6" y="525" width="0.2" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="13.56" y="535.5" ></text>
</g>
<g >
<title>Interpreter (239,952 bytes, 0.01%)</title><rect x="10.8" y="605" width="0.2" height="15.0" fill="rgb(219,119,0)" rx="2" ry="2" />
<text  x="13.85" y="615.5" ></text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe:::allocateMemory(Unsafe.java:622) (814,080 bytes, 0.03%)</title><rect x="13.0" y="349" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="16.01" y="359.5" ></text>
</g>
<g >
<title>prof_alloc_prep[inline] (262,144 bytes, 0.01%)</title><rect x="1189.0" y="445" width="0.1" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="1191.99" y="455.5" ></text>
</g>
<g >
<title>Interpreter (1,781,456 bytes, 0.07%)</title><rect x="11.0" y="541" width="0.8" height="15.0" fill="rgb(218,118,0)" rx="2" ry="2" />
<text  x="14.04" y="551.5" ></text>
</g>
<g >
<title>Interpreter (239,952 bytes, 0.01%)</title><rect x="10.8" y="557" width="0.2" height="15.0" fill="rgb(198,98,0)" rx="2" ry="2" />
<text  x="13.85" y="567.5" ></text>
</g>
<g >
<title>je_prof_tctx_create&lt;000000000009d920&gt; (393,216 bytes, 0.01%)</title><rect x="10.4" y="541" width="0.1" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="13.37" y="551.5" ></text>
</g>
<g >
<title>je_prof_backtrace&lt;00000000000ab910&gt; (46,837,760 bytes, 1.74%)</title><rect x="38.0" y="221" width="20.6" height="15.0" fill="rgb(252,127,127)" rx="2" ry="2" />
<text  x="41.05" y="231.5" ></text>
</g>
<g >
<title>jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .isra.127] [clone .constprop.309] (2,686,344,608 bytes, 99.81%)</title><rect x="11.0" y="701" width="1177.7" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="13.95" y="711.5" >jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .isra.127] [clone .constprop.309]</text>
</g>
<g >
<title>LGenerateUnsafeLeak:::allocate3(GenerateUnsafeLeak.java:52) (2,577,694,720 bytes, 95.77%)</title><rect x="58.6" y="413" width="1130.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="61.59" y="423.5" >LGenerateUnsafeLeak:::allocate3(GenerateUnsafeLeak.java:52)</text>
</g>
<g >
<title>Unsafe_AllocateMemory0&lt;0000000000f1e8b0&gt; (814,080 bytes, 0.03%)</title><rect x="13.0" y="317" width="0.4" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="16.01" y="327.5" ></text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe:::allocateMemory0 (56,304,640 bytes, 2.09%)</title><rect x="13.4" y="333" width="24.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="16.36" y="343.5" >L..</text>
</g>
<g >
<title>JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*)&lt;0000000000866080&gt; (265,008 bytes, 0.01%)</title><rect x="10.0" y="685" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="13.05" y="695.5" ></text>
</g>
<g >
<title>Interpreter (2,686,198,224 bytes, 99.81%)</title><rect x="11.0" y="589" width="1177.7" height="15.0" fill="rgb(229,129,0)" rx="2" ry="2" />
<text  x="14.02" y="599.5" >Interpreter</text>
</g>
<g >
<title>Interpreter (263,112 bytes, 0.01%)</title><rect x="11.6" y="77" width="0.2" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="14.65" y="87.5" ></text>
</g>
<g >
<title>ScopeDesc::decode_body()&lt;0000000000d180f0&gt; (393,216 bytes, 0.01%)</title><rect x="1189.7" y="525" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1192.75" y="535.5" ></text>
</g>
<g >
<title>prof_backtrace_impl[inline] (2,481,576,960 bytes, 92.20%)</title><rect x="58.6" y="205" width="1088.0" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="61.59" y="215.5" >prof_backtrace_impl[inline]</text>
</g>
<g >
<title>Interpreter (2,686,161,384 bytes, 99.80%)</title><rect x="11.0" y="557" width="1177.7" height="15.0" fill="rgb(215,115,0)" rx="2" ry="2" />
<text  x="14.03" y="567.5" >Interpreter</text>
</g>
<g >
<title>Interpreter (1,691,664 bytes, 0.06%)</title><rect x="11.1" y="477" width="0.7" height="15.0" fill="rgb(254,154,0)" rx="2" ry="2" />
<text  x="14.08" y="487.5" ></text>
</g>
<g >
<title>call_stub (239,984 bytes, 0.01%)</title><rect x="10.8" y="669" width="0.2" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="13.85" y="679.5" ></text>
</g>
<g >
<title>je_malloc_default&lt;0000000000026860&gt; (262,144 bytes, 0.01%)</title><rect x="1189.0" y="493" width="0.1" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1191.99" y="503.5" ></text>
</g>
<g >
<title>je_prof_backtrace&lt;00000000000ab910&gt; (262,496 bytes, 0.01%)</title><rect x="10.3" y="525" width="0.1" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="13.26" y="535.5" ></text>
</g>
<g >
<title>invoke(InstanceKlass*, methodHandle const&amp;, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*) [clone .constprop.148] (2,684,356,320 bytes, 99.74%)</title><rect x="11.8" y="509" width="1176.9" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="14.82" y="519.5" >invoke(InstanceKlass*, methodHandle const&amp;, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*) [clone .constprop.148]</text>
</g>
<g >
<title>prof_alloc_prep[inline] (46,837,760 bytes, 1.74%)</title><rect x="38.0" y="253" width="20.6" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="41.05" y="263.5" ></text>
</g>
<g >
<title>__GI___clone (2,691,251,592 bytes, 99.99%)</title><rect x="10.0" y="781" width="1179.9" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="13.00" y="791.5" >__GI___clone</text>
</g>
<g >
<title>Thread::call_run()&lt;0000000000eecef0&gt; (2,732,384 bytes, 0.10%)</title><rect x="1188.7" y="733" width="1.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1191.73" y="743.5" ></text>
</g>
<g >
<title>jni_CallStaticVoidMethod&lt;0000000000900710&gt; (2,686,344,608 bytes, 99.81%)</title><rect x="11.0" y="717" width="1177.7" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="13.95" y="727.5" >jni_CallStaticVoidMethod&lt;0000000000900710&gt;</text>
</g>
<g >
<title>attach_listener_thread_entry(JavaThread*, Thread*)&lt;000000000042b310&gt; (2,115,920 bytes, 0.08%)</title><rect x="1189.0" y="701" width="0.9" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="1191.99" y="711.5" ></text>
</g>
<g >
<title>Interpreter (239,952 bytes, 0.01%)</title><rect x="10.8" y="573" width="0.2" height="15.0" fill="rgb(253,153,0)" rx="2" ry="2" />
<text  x="13.85" y="583.5" ></text>
</g>
<g >
<title>Interpreter (2,703,392 bytes, 0.10%)</title><rect x="11.8" y="349" width="1.2" height="15.0" fill="rgb(216,116,0)" rx="2" ry="2" />
<text  x="14.82" y="359.5" ></text>
</g>
<g >
<title>call_stub (265,008 bytes, 0.01%)</title><rect x="10.0" y="653" width="0.2" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="13.05" y="663.5" ></text>
</g>
<g >
<title>Lsun/misc/Unsafe:::allocateMemory(Unsafe.java:462) (2,577,694,720 bytes, 95.77%)</title><rect x="58.6" y="365" width="1130.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="61.59" y="375.5" >Lsun/misc/Unsafe:::allocateMemory(Unsafe.java:462)</text>
</g>
<g >
<title>Interpreter (1,396,792 bytes, 0.05%)</title><rect x="11.2" y="413" width="0.6" height="15.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="14.19" y="423.5" ></text>
</g>
<g >
<title>je_prof_backtrace&lt;00000000000ab910&gt; (2,481,576,960 bytes, 92.20%)</title><rect x="58.6" y="221" width="1088.0" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="61.59" y="231.5" >je_prof_backtrace&lt;00000000000ab910&gt;</text>
</g>
<g >
<title>Interpreter (905,288 bytes, 0.03%)</title><rect x="11.4" y="301" width="0.4" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="14.40" y="311.5" ></text>
</g>
<g >
<title>Interpreter (1,714,800 bytes, 0.06%)</title><rect x="11.1" y="493" width="0.7" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="14.07" y="503.5" ></text>
</g>
<g >
<title>prof_alloc_prep[inline] (393,216 bytes, 0.01%)</title><rect x="10.4" y="557" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="13.37" y="567.5" ></text>
</g>
<g >
<title>jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .isra.127] [clone .constprop.309] (239,984 bytes, 0.01%)</title><rect x="10.8" y="701" width="0.2" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="13.85" y="711.5" ></text>
</g>
<g >
<title>Interpreter (1,084,360 bytes, 0.04%)</title><rect x="11.3" y="365" width="0.5" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="14.32" y="375.5" ></text>
</g>
<g >
<title>call_stub (2,684,356,320 bytes, 99.74%)</title><rect x="11.8" y="477" width="1176.9" height="15.0" fill="rgb(202,102,0)" rx="2" ry="2" />
<text  x="14.82" y="487.5" >call_stub</text>
</g>
<g >
<title>Arena::Arena(MEMFLAGS, unsigned long) (393,216 bytes, 0.01%)</title><rect x="10.4" y="621" width="0.1" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="13.37" y="631.5" ></text>
</g>
<g >
<title>Interpreter (3,518,464 bytes, 0.13%)</title><rect x="11.8" y="429" width="1.6" height="15.0" fill="rgb(223,123,0)" rx="2" ry="2" />
<text  x="14.82" y="439.5" ></text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe:::allocateMemory(Unsafe.java:622) (2,481,576,960 bytes, 92.20%)</title><rect x="58.6" y="349" width="1088.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="61.59" y="359.5" >Ljdk/internal/misc/Unsafe:::allocateMemory(Unsafe.java:622)</text>
</g>
<g >
<title>prof_backtrace_impl[inline] (262,144 bytes, 0.01%)</title><rect x="1189.0" y="397" width="0.1" height="15.0" fill="rgb(235,100,100)" rx="2" ry="2" />
<text  x="1191.99" y="407.5" ></text>
</g>
<g >
<title>Interpreter (3,517,504 bytes, 0.13%)</title><rect x="11.8" y="397" width="1.6" height="15.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="14.82" y="407.5" ></text>
</g>
<g >
<title>prof_alloc_prep[inline] (393,216 bytes, 0.01%)</title><rect x="1189.7" y="429" width="0.2" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="1192.75" y="439.5" ></text>
</g>
<g >
<title>LGenerateUnsafeLeak:::main(GenerateUnsafeLeak.java:22) (2,577,694,720 bytes, 95.77%)</title><rect x="58.6" y="461" width="1130.1" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="61.59" y="471.5" >LGenerateUnsafeLeak:::main(GenerateUnsafeLeak.java:22)</text>
</g>
<g >
<title>Interpreter (1,071,800 bytes, 0.04%)</title><rect x="11.3" y="349" width="0.5" height="15.0" fill="rgb(215,115,0)" rx="2" ry="2" />
<text  x="14.33" y="359.5" ></text>
</g>
<g >
<title>imalloc_body[inline] (786,432 bytes, 0.03%)</title><rect x="1189.4" y="461" width="0.3" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="1192.40" y="471.5" ></text>
</g>
<g >
<title>Interpreter (1,152,912 bytes, 0.04%)</title><rect x="11.3" y="381" width="0.5" height="15.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="14.29" y="391.5" ></text>
</g>
<g >
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)&lt;0000000000481570&gt; (310,768 bytes, 0.01%)</title><rect x="1188.8" y="669" width="0.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1191.81" y="679.5" ></text>
</g>
<g >
<title>je_prof_tctx_create&lt;000000000009d920&gt; (786,432 bytes, 0.03%)</title><rect x="1189.4" y="429" width="0.3" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1192.40" y="439.5" ></text>
</g>
<g >
<title>Interpreter (339,904 bytes, 0.01%)</title><rect x="11.6" y="109" width="0.2" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="14.62" y="119.5" ></text>
</g>
<g >
<title>Interpreter (932,040 bytes, 0.03%)</title><rect x="11.4" y="317" width="0.4" height="15.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text  x="14.39" y="327.5" ></text>
</g>
<g >
<title>je_prof_tctx_create&lt;000000000009d920&gt; (2,611,200 bytes, 0.10%)</title><rect x="11.8" y="237" width="1.2" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="14.82" y="247.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*)&lt;0000000000865a20&gt; (239,984 bytes, 0.01%)</title><rect x="10.8" y="685" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="13.85" y="695.5" ></text>
</g>
<g >
<title>Interpreter (474,832 bytes, 0.02%)</title><rect x="11.6" y="173" width="0.2" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="14.57" y="183.5" ></text>
</g>
<g >
<title>prof_alloc_prep[inline] (2,611,200 bytes, 0.10%)</title><rect x="11.8" y="253" width="1.2" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="14.82" y="263.5" ></text>
</g>
<g >
<title>je_prof_backtrace&lt;00000000000ab910&gt; (393,216 bytes, 0.01%)</title><rect x="10.4" y="525" width="0.1" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="13.37" y="535.5" ></text>
</g>
<g >
<title>Agent_OnAttach&lt;000000000000361d&gt; (2,114,176 bytes, 0.08%)</title><rect x="1189.0" y="653" width="0.9" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="1191.99" y="663.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*)&lt;0000000000c588b0&gt; (2,733,504 bytes, 0.10%)</title><rect x="1188.7" y="749" width="1.2" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="1191.73" y="759.5" ></text>
</g>
<g >
<title>prof_backtrace_impl[inline] (56,304,640 bytes, 2.09%)</title><rect x="13.4" y="205" width="24.6" height="15.0" fill="rgb(206,58,58)" rx="2" ry="2" />
<text  x="16.36" y="215.5" >p..</text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe:::allocateMemory(Unsafe.java:622) (96,117,760 bytes, 3.57%)</title><rect x="1146.6" y="349" width="42.1" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1149.58" y="359.5" >Ljd..</text>
</g>
<g >
<title>Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*)&lt;0000000000cec770&gt; (2,684,356,320 bytes, 99.74%)</title><rect x="11.8" y="525" width="1176.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="14.82" y="535.5" >Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*)&lt;0000000000cec770&gt;</text>
</g>
<g >
<title>Interpreter (263,760 bytes, 0.01%)</title><rect x="10.0" y="621" width="0.2" height="15.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text  x="13.05" y="631.5" ></text>
</g>
<g >
<title>je_prof_tctx_create&lt;000000000009d920&gt; (393,216 bytes, 0.01%)</title><rect x="1189.7" y="413" width="0.2" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="1192.75" y="423.5" ></text>
</g>
<g >
<title>Unsafe_AllocateMemory0&lt;0000000000f1e8b0&gt; (2,611,200 bytes, 0.10%)</title><rect x="11.8" y="317" width="1.2" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="14.82" y="327.5" ></text>
</g>
<g >
<title>je_prof_tctx_create&lt;000000000009d920&gt; (96,117,760 bytes, 3.57%)</title><rect x="1146.6" y="237" width="42.1" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="1149.58" y="247.5" >je_..</text>
</g>
<g >
<title>imalloc_body[inline] (393,216 bytes, 0.01%)</title><rect x="1189.7" y="445" width="0.2" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="1192.75" y="455.5" ></text>
</g>
<g >
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)&lt;00000000003e00b0&gt; (786,432 bytes, 0.03%)</title><rect x="1189.4" y="509" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1192.40" y="519.5" ></text>
</g>
<g >
<title>Unsafe_AllocateMemory0&lt;0000000000f1e8b0&gt; (46,837,760 bytes, 1.74%)</title><rect x="38.0" y="317" width="20.6" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="41.05" y="327.5" ></text>
</g>
<g >
<title>imalloc[inline] (393,216 bytes, 0.01%)</title><rect x="10.4" y="589" width="0.1" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="13.37" y="599.5" ></text>
</g>
<g >
<title>imalloc_body[inline] (56,304,640 bytes, 2.09%)</title><rect x="13.4" y="269" width="24.6" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="16.36" y="279.5" >i..</text>
</g>
<g >
<title>je_malloc_default&lt;0000000000026860&gt; (814,080 bytes, 0.03%)</title><rect x="13.0" y="301" width="0.4" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="16.01" y="311.5" ></text>
</g>
<g >
<title>je_prof_backtrace&lt;00000000000ab910&gt; (262,144 bytes, 0.01%)</title><rect x="1189.0" y="413" width="0.1" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1191.99" y="423.5" ></text>
</g>
<g >
<title>start_thread&lt;00000000000094b0&gt; (2,691,251,592 bytes, 99.99%)</title><rect x="10.0" y="765" width="1179.9" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="13.00" y="775.5" >start_thread&lt;00000000000094b0&gt;</text>
</g>
<g >
<title>je_prof_tctx_create&lt;000000000009d920&gt; (46,837,760 bytes, 1.74%)</title><rect x="38.0" y="237" width="20.6" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="41.05" y="247.5" ></text>
</g>
<g >
<title>JvmtiThreadState::post_events(JvmtiEnv*)&lt;0000000000a70780&gt; (2,113,376 bytes, 0.08%)</title><rect x="1189.0" y="605" width="0.9" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1191.99" y="615.5" ></text>
</g>
<g >
<title>je_prof_tctx_create&lt;000000000009d920&gt; (814,080 bytes, 0.03%)</title><rect x="13.0" y="237" width="0.4" height="15.0" fill="rgb(250,124,124)" rx="2" ry="2" />
<text  x="16.01" y="247.5" ></text>
</g>
<g >
<title>je_prof_tctx_create&lt;000000000009d920&gt; (524,640 bytes, 0.02%)</title><rect x="10.6" y="557" width="0.2" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="13.56" y="567.5" ></text>
</g>
<g >
<title>prof_alloc_prep[inline] (262,496 bytes, 0.01%)</title><rect x="10.3" y="557" width="0.1" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="13.26" y="567.5" ></text>
</g>
<g >
<title>Interpreter (1,408,176 bytes, 0.05%)</title><rect x="11.2" y="429" width="0.6" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="14.19" y="439.5" ></text>
</g>
<g >
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)&lt;00000000003df990&gt; (786,432 bytes, 0.03%)</title><rect x="1189.4" y="525" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1192.40" y="535.5" ></text>
</g>
<g >
<title>prof_backtrace_impl[inline] (814,080 bytes, 0.03%)</title><rect x="13.0" y="205" width="0.4" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="16.01" y="215.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner()&lt;0000000000ee85b0&gt; (2,723,632 bytes, 0.10%)</title><rect x="1188.7" y="717" width="1.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1191.73" y="727.5" ></text>
</g>
<g >
<title>CompiledMethod::scope_desc_at(unsigned char*)&lt;0000000000603c50&gt; (229,376 bytes, 0.01%)</title><rect x="1189.3" y="541" width="0.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1192.26" y="551.5" ></text>
</g>
<g >
<title>je_prof_backtrace&lt;00000000000ab910&gt; (393,216 bytes, 0.01%)</title><rect x="1189.7" y="397" width="0.2" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1192.75" y="407.5" ></text>
</g>
<g >
<title>Interpreter (262,256 bytes, 0.01%)</title><rect x="10.0" y="589" width="0.2" height="15.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="13.05" y="599.5" ></text>
</g>
<g >
<title>prof_alloc_prep[inline] (2,481,576,960 bytes, 92.20%)</title><rect x="58.6" y="253" width="1088.0" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="61.59" y="263.5" >prof_alloc_prep[inline]</text>
</g>
<g >
<title>imalloc[inline] (786,432 bytes, 0.03%)</title><rect x="1189.4" y="477" width="0.3" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="1192.40" y="487.5" ></text>
</g>
<g >
<title>je_prof_backtrace&lt;00000000000ab910&gt; (56,304,640 bytes, 2.09%)</title><rect x="13.4" y="221" width="24.6" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="16.36" y="231.5" >j..</text>
</g>
<g >
<title>Unsafe_AllocateMemory0&lt;0000000000f1e8b0&gt; (96,117,760 bytes, 3.57%)</title><rect x="1146.6" y="317" width="42.1" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="1149.58" y="327.5" >Uns..</text>
</g>
<g >
<title>LGenerateUnsafeLeak:::allocate5(GenerateUnsafeLeak.java:60) (103,142,400 bytes, 3.83%)</title><rect x="13.4" y="381" width="45.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="16.36" y="391.5" >LGen..</text>
</g>
<g >
<title>je_malloc_default&lt;0000000000026860&gt; (786,432 bytes, 0.03%)</title><rect x="1189.4" y="493" width="0.3" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="1192.40" y="503.5" ></text>
</g>
<g >
<title>Interpreter (106,661,600 bytes, 3.96%)</title><rect x="11.8" y="461" width="46.8" height="15.0" fill="rgb(196,96,0)" rx="2" ry="2" />
<text  x="14.82" y="471.5" >Inte..</text>
</g>
<g >
<title>prof_alloc_prep[inline] (786,432 bytes, 0.03%)</title><rect x="1189.4" y="445" width="0.3" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="1192.40" y="455.5" ></text>
</g>
<g >
<title>JVM_InvokeMethod&lt;000000000092b5c0&gt; (2,684,356,320 bytes, 99.74%)</title><rect x="11.8" y="541" width="1176.9" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="14.82" y="551.5" >JVM_InvokeMethod&lt;000000000092b5c0&gt;</text>
</g>
<g >
<title>je_malloc_default&lt;0000000000026860&gt; (96,117,760 bytes, 3.57%)</title><rect x="1146.6" y="301" width="42.1" height="15.0" fill="rgb(235,100,100)" rx="2" ry="2" />
<text  x="1149.58" y="311.5" >je_..</text>
</g>
<g >
<title>Interpreter (239,952 bytes, 0.01%)</title><rect x="10.8" y="621" width="0.2" height="15.0" fill="rgb(220,120,0)" rx="2" ry="2" />
<text  x="13.85" y="631.5" ></text>
</g>
<g >
<title>je_prof_tctx_create&lt;000000000009d920&gt; (262,496 bytes, 0.01%)</title><rect x="10.3" y="541" width="0.1" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="13.26" y="551.5" ></text>
</g>
<g >
<title>imalloc[inline] (56,304,640 bytes, 2.09%)</title><rect x="13.4" y="285" width="24.6" height="15.0" fill="rgb(237,103,103)" rx="2" ry="2" />
<text  x="16.36" y="295.5" >i..</text>
</g>
<g >
<title>Interpreter (311,968 bytes, 0.01%)</title><rect x="11.6" y="93" width="0.2" height="15.0" fill="rgb(252,152,0)" rx="2" ry="2" />
<text  x="14.62" y="103.5" ></text>
</g>
<g >
<title>jni_CallStaticObjectMethod&lt;00000000008fed40&gt; (239,984 bytes, 0.01%)</title><rect x="10.8" y="717" width="0.2" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="13.85" y="727.5" ></text>
</g>
<g >
<title>Unsafe_AllocateMemory0&lt;0000000000f1e8b0&gt; (2,481,576,960 bytes, 92.20%)</title><rect x="58.6" y="317" width="1088.0" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="61.59" y="327.5" >Unsafe_AllocateMemory0&lt;0000000000f1e8b0&gt;</text>
</g>
<g >
<title>je_malloc_default&lt;0000000000026860&gt; (393,216 bytes, 0.01%)</title><rect x="10.4" y="605" width="0.1" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="13.37" y="615.5" ></text>
</g>
<g >
<title>Interpreter (263,664 bytes, 0.01%)</title><rect x="10.0" y="605" width="0.2" height="15.0" fill="rgb(216,116,0)" rx="2" ry="2" />
<text  x="13.05" y="615.5" ></text>
</g>
<g >
<title>Interpreter (1,530,472 bytes, 0.06%)</title><rect x="11.1" y="445" width="0.7" height="15.0" fill="rgb(223,123,0)" rx="2" ry="2" />
<text  x="14.13" y="455.5" ></text>
</g>
<g >
<title>LGenerateUnsafeLeak:::allocate1(GenerateUnsafeLeak.java:44) (103,142,400 bytes, 3.83%)</title><rect x="13.4" y="445" width="45.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="16.36" y="455.5" >LGen..</text>
</g>
<g >
<title>imalloc_body[inline] (2,481,576,960 bytes, 92.20%)</title><rect x="58.6" y="269" width="1088.0" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="61.59" y="279.5" >imalloc_body[inline]</text>
</g>
<g >
<title>load_agent(AttachOperation*, outputStream*)&lt;000000000042abf0&gt; (2,115,920 bytes, 0.08%)</title><rect x="1189.0" y="685" width="0.9" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="1191.99" y="695.5" ></text>
</g>
<g >
<title>Interpreter (1,775,632 bytes, 0.07%)</title><rect x="11.0" y="525" width="0.8" height="15.0" fill="rgb(198,98,0)" rx="2" ry="2" />
<text  x="14.04" y="535.5" ></text>
</g>
<g >
<title>je_malloc_default&lt;0000000000026860&gt; (393,216 bytes, 0.01%)</title><rect x="1189.7" y="477" width="0.2" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="1192.75" y="487.5" ></text>
</g>
<g >
<title>Interpreter (3,518,464 bytes, 0.13%)</title><rect x="11.8" y="445" width="1.6" height="15.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="14.82" y="455.5" ></text>
</g>
<g >
<title>imalloc_body[inline] (262,144 bytes, 0.01%)</title><rect x="1189.0" y="461" width="0.1" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="1191.99" y="471.5" ></text>
</g>
<g >
<title>MetaspaceShared::initialize_shared_spaces()&lt;0000000000bbf270&gt; (655,760 bytes, 0.02%)</title><rect x="10.3" y="653" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="13.26" y="663.5" ></text>
</g>
<g >
<title>imalloc_body[inline] (2,611,200 bytes, 0.10%)</title><rect x="11.8" y="269" width="1.2" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="14.82" y="279.5" ></text>
</g>
<g >
<title>Interpreter (1,163,648 bytes, 0.04%)</title><rect x="11.3" y="397" width="0.5" height="15.0" fill="rgb(203,103,0)" rx="2" ry="2" />
<text  x="14.29" y="407.5" ></text>
</g>
<g >
<title>prof_backtrace_impl[inline] (786,432 bytes, 0.03%)</title><rect x="1189.4" y="397" width="0.3" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="1192.40" y="407.5" ></text>
</g>
<g >
<title>JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*)&lt;00000000009e0f90&gt; (2,113,648 bytes, 0.08%)</title><rect x="1189.0" y="621" width="0.9" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="1191.99" y="631.5" ></text>
</g>
<g >
<title>imalloc[inline] (2,481,576,960 bytes, 92.20%)</title><rect x="58.6" y="285" width="1088.0" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="61.59" y="295.5" >imalloc[inline]</text>
</g>
<g >
<title>Interpreter (460,320 bytes, 0.02%)</title><rect x="11.6" y="157" width="0.2" height="15.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="14.57" y="167.5" ></text>
</g>
<g >
<title>je_malloc_default&lt;0000000000026860&gt; (262,496 bytes, 0.01%)</title><rect x="10.3" y="605" width="0.1" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="13.26" y="615.5" ></text>
</g>
<g >
<title>JvmtiDeferredEventQueue::post(JvmtiEnv*)&lt;0000000000a57730&gt; (2,113,376 bytes, 0.08%)</title><rect x="1189.0" y="589" width="0.9" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1191.99" y="599.5" ></text>
</g>
<g >
<title>prof_backtrace_impl[inline] (393,216 bytes, 0.01%)</title><rect x="1189.7" y="381" width="0.2" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="1192.75" y="391.5" ></text>
</g>
<g >
<title>imalloc_body[inline] (814,080 bytes, 0.03%)</title><rect x="13.0" y="269" width="0.4" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="16.01" y="279.5" ></text>
</g>
<g >
<title>Interpreter (1,768,768 bytes, 0.07%)</title><rect x="11.0" y="509" width="0.8" height="15.0" fill="rgb(219,119,0)" rx="2" ry="2" />
<text  x="14.05" y="519.5" ></text>
</g>
</g>
</svg>
